var searchDocuments = {"references/eClassifiers/Script/inheritance.html":{"path":"Script/Inheritance","action-uuid":"23630a36-3cf8-4e04-b474-3ab4d5766f71","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ScriptReference/index.html":{"action-uuid":"38fae1dd-1543-454d-ad31-cd6004b5eb47","title":"ScriptReference","content":"References external script."},"references/eClassifiers/HtmlElement/index.html":{"action-uuid":"ba81477a-2465-4366-aa11-526119de3c62","title":"HtmlElement","content":"Base class for other HTML and bootstrap elements."},"references/eClassifiers/HtmlElement/references/eStructuralFeatures/attributes/index.html":{"path":"HtmlElement/References/attributes","action-uuid":"4bacd375-18ed-4641-aa43-b97acdddfd70","title":"attributes","content":"Tag attributes. Interpolation Attribute values are interpolated, i.e. tokens in the form of default value] are replaced with the contextual values or default values, if any. Examples: ${my-style} - Token without a default value. bold - Token with a default value. Regular attributes For all top-level entries except class, style, and data attribute value is produced by converting the value to string for scalars and to JSON string for lists and maps. For attributes which do not start with data- a warning is issued if the value is not a scalar, i.e. a list or a map. Class For class attribute its value is formed by concantenating elements using space as a separator. If elements are hierarchical then class name is formed by concatenation with a dash (-) as a separator. Data If value of data attbibute is a map then keys of that map get concatenated with data using dash (-) as a separator, them same applies to nested maps. Non-map values become attribute values - scalars are converted to string, lists are converted to JSON string. Style Style can be defined as a string, list or map. If style is defined as a list, all list values are concatenated with a space as a separator - it is a convent way for long unstructured definitions. If style value is a map then the value and its contained map values are processed in the following fashion: Keys are concatenated with dash as a separator. List values are contcatenated wtih space as a separator."},"references/eClassifiers/Page/inheritance.html":{"path":"Page/Inheritance","action-uuid":"f13e4ca4-d150-42c7-b605-79afecb2f587","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/StylesheetReference/references/eStructuralFeatures/target/index.html":{"path":"StylesheetReference/Attributes/target","action-uuid":"dc2fa5af-0ab6-4704-bac3-075c15693006","title":"target","content":"Stylesheet URL."},"references/eClassifiers/HtmlElement/references/eStructuralFeatures/content/index.html":{"path":"HtmlElement/References/content","action-uuid":"26e82df5-7565-4314-9fa0-802779f9b411","title":"content","content":"Container content. Content elements are adapted to ${javadoc/org.nasdanika.common.SupplierFactory} for generation of HTML content."},"references/eClassifiers/Tag/inheritance.html":{"path":"Tag/Inheritance","action-uuid":"628f5ecc-8d00-4ae8-bb96-5f29a0851d99","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Page/references/eStructuralFeatures/language/index.html":{"path":"Page/Attributes/language","action-uuid":"55b2583c-c992-4d68-ac3f-1453142a38d9","title":"language","content":"Page language - lang attribute."},"references/eClassifiers/Stylesheet/inheritance.html":{"path":"Stylesheet/Inheritance","action-uuid":"cec3309e-5d18-4bbf-b6e6-ec6d85c704b4","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Script/index.html":{"action-uuid":"1ecdf8bd-877c-4c46-bfe9-a907ec42c475","title":"Script","content":"Script with code stored in the model element source reference."},"references/eClassifiers/ScriptReference/references/eStructuralFeatures/src/index.html":{"path":"ScriptReference/Attributes/src","action-uuid":"0d90ee72-53f3-4645-84e2-8ef22c2591cb","title":"src","content":"Script URL."},"index.html":{"action-uuid":"7e5bbeed-56d1-420d-8ad8-2b35f5e8e09e","title":"html","content":"HTML model"},"references/eClassifiers/Tag/references/eStructuralFeatures/name/index.html":{"path":"Tag/Attributes/name","action-uuid":"9bf950df-86cd-4d85-91d4-6d3e08e5497f","title":"name","content":"Tag name."},"references/eClassifiers/Stylesheet/index.html":{"action-uuid":"0af005d0-d24f-4ad7-8ef6-412a0c414bf9","title":"Stylesheet","content":"CSS stylesheet with code stored in the model element code attribute."},"references/eClassifiers/Page/references/eStructuralFeatures/body/index.html":{"path":"Page/References/body","action-uuid":"93cccb81-f6f4-401d-873a-bf8ab331f22b","title":"body","content":"Body content."},"references/eClassifiers/Page/diagram.html":{"path":"Page/Diagram","action-uuid":"127fd161-839d-401a-88b0-62a0b3478eab","title":"Diagram","content":"PlantUML 1.2023.13[From string (line 2) ] @startumlclass DE_8 as &quot;Page&quot; [[{HTML page. The name attribute is output as title tag in the head.Syntax Error?"},"references/eClassifiers/StylesheetReference/diagram.html":{"path":"StylesheetReference/Diagram","action-uuid":"2d684b9e-8811-466c-a1d2-c5aee7bf1808","title":"Diagram","content":"StylesheetReferencetarget :EStringModelElementMarkedAdaptabledescription :EStringuris :EString[] [[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/references/eStructuralFeatures/uris/index.html{Element URI's - there might be more than one. See ``NcoreUtil.getUris()`` for more details.URI's can be used for cross-referencing of elements in a resource-independent fashion.}]]]uuid :EStringannotations :Property[]labelPrototype :EObject[[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/references/eStructuralFeatures/labelPrototype/index.html{If this reference is not set then EObjectLabelBuilder creates a new Label of its subclass (Link or Action) using AppFactory in newLabel() method.If this reference is set and is and instanceof Label then a copy of the label is created and returned.Otherwise the reference value it is adapted to LabelProvider which is used to create a label.This allows to merge labels and chain label generation.}]]]representations :RepresentationEntry[] [[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/references/eStructuralFeatures/representations/index.html{Mapping of representation keys to URI's of representation resources. URI's are resolved relative to the model element resource URI.During object loading resources are loaded and linked to the object. Additional processing depends on the resource type.In case of Drawio diagrams, diagram elements are semantically mapped to model elements and representation resource root elements are added as children to the object.See [Nasdanika Core Drawio](../drawio/index.html) and [Nasdanika Core EMF](../emf/index.html) documentation for more information. }]]]"},"references/eClassifiers/Stylesheet/diagram.html":{"path":"Stylesheet/Diagram","action-uuid":"a68a34d2-ee1e-465d-ae6a-50a19999054f","title":"Diagram","content":"StylesheetFilterModelElementsource :EObject"},"glossary.html":{"action-uuid":"f0383b14-f03d-498c-9eb1-4c3a8046b583","title":"Glossary","content":"Clear Identifier(s) Hide UUID {{data.value.name}} {{data.value[0].value}} {{item.value}}"},"references/eClassifiers/StylesheetReference/inheritance.html":{"path":"StylesheetReference/Inheritance","action-uuid":"9dccc275-84cc-44fe-947e-bdab531c3bcf","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Tag/diagram.html":{"path":"Tag/Diagram","action-uuid":"2bef7877-5399-479c-a9ec-a5965c8fe830","title":"Diagram","content":"Tagname :EStringHtmlElementModelElementattributes :Property[] [[[../HtmlElement/references/eStructuralFeatures/attributes/index.html{Tag attributes. ## Interpolation Attribute values are interpolated, i.e. tokens in the form of ``default value]`` are replaced with the contextual values or default values, if any. Examples: ``${my-style}`` - Token without a default value.``bold`` - Token with a default value. ## Regular attributes For all top-level entries except ``class``, ``style``, and ``data`` attribute value is produced by converting the value to string for scalars and to JSON string for lists and maps.For attributes which do not start with ``data-`` a warning is issued if the value is not a scalar, i.e. a list or a map. ## Class For class attribute its value is formed by concantenating elements using space as a separator. If elements are hierarchical then class name is formed by concatenation with a dash (``-``) as a separator. ## Data If value of ``data`` attbibute is a map then keys of that map get concatenated with ``data`` using dash (``-``) as a separator, them same applies to nested maps. Non-map values become attribute values - scalars are converted to string, lists are converted to JSON string. ## Style Style can be defined as a string, list or map. If style is defined as a list, all list values are concatenated with a space as a separator - it is a convent way for long unstructured definitions. If style value is a map then the value and its contained map values are processed in the following fashion: Keys are concatenated with dash as a separator.List values are contcatenated wtih space as a separator.}]]]content :EObject[] [[[../HtmlElement/references/eStructuralFeatures/content/index.html{Container content. Content elements are adapted to ${javadoc/org.nasdanika.common.SupplierFactory} for generation of HTML content.}]]]"},"references/eClassifiers/Page/references/eStructuralFeatures/builders/index.html":{"path":"Page/References/builders","action-uuid":"3536026a-e1cb-47cd-8432-2b4a30d4b311","title":"builders","content":"Builders operate on an instance of org.nasdanika.html.HTMLPage created by the the page element. Builders shall be adaptable to org.nasdanika.common.Consumer."},"references/eClassifiers/ScriptReference/inheritance.html":{"path":"ScriptReference/Inheritance","action-uuid":"1f1109c8-fac8-4035-92b8-577aaf06f3fc","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/StylesheetReference/index.html":{"action-uuid":"ef51b0cd-4321-451a-9de5-db0693733ce8","title":"StylesheetReference","content":"Reference to an external stylesheet."},"diagram.html":{"action-uuid":"a3448a9f-f460-4e52-b137-fd08ceabe336","title":"Diagram","content":"PlantUML 1.2023.13[From string (line 42) ] @startumlabstract class DE_j as &quot;HtmlElement&quot; [[references/eClassifiers/HtmlElement/index.html{Base class for other HTML and boo ...[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/index.html{Base class for many Nasdanika mod ...==--...... ( skipping 17 lines )... ## Data If value of ``data`` attbibute is a map then keys of that map get concatenated with ``data`` using dash (``-``) as a sep ... ## Style Style can be defined as a string, list or map. If style is defined as a list, all list values are concatenated with a sp ... If style value is a map then the value and its contained map values are processed in the following fashion: * Keys are concatenated with dash as a separator.* List values are contcatenated wtih space as a separator.}]]]content : [[https://ecore.models.nasdanika.org/references/eClassifiers/EObject/index.html EObject]][] [[[references/eC ... Content elements are adapted to ${javadoc/org.nasdanika.common.SupplierFactory} for generation of HTML content.}]]]--}class DE_k as &quot;Page&quot; [[references/eClassifiers/Page/index.html{HTML page. The name attribute is output as title tag in ...Syntax Error?"},"references/eClassifiers/Page/index.html":{"action-uuid":"43963166-a194-48a2-83aa-a03fe8a92dd5","title":"Page","content":"HTML page. The name attribute is output as title tag in the head. Overview video - in Russian."},"references/eClassifiers/Page/references/eStructuralFeatures/stylesheets/index.html":{"path":"Page/Attributes/stylesheets","action-uuid":"a02ee254-0718-49c9-ae63-0f7978f9eb6a","title":"stylesheets","content":"Stylesheet URL&rsquo;s"},"references/eClassifiers/Tag/index.html":{"action-uuid":"0809c860-04cd-4ccd-a32e-2e5e606dd9cd","title":"Tag","content":"HTML Tag"},"references/eClassifiers/HtmlElement/diagram.html":{"path":"HtmlElement/Diagram","action-uuid":"0a36751b-4201-4cee-9c07-ecef48c3118f","title":"Diagram","content":"PlantUML 1.2023.13[From string (line 50) ] @startumlabstract class DE_1 as &quot;HtmlElement&quot; [[{Base class for other HTML and bootstrap elements. }]] #DDDDDD {--}abstract class DE_2 as &quot;ModelElement&quot; [[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/index.h ......... ( skipping 25 lines )...}class DE_5 as &quot;EObject&quot; [[https://ecore.models.nasdanika.org/references/eClassifiers/EObject/index.html]] {--eAllContents() : [[https://ecore.models.nasdanika.org/references/eClassifiers/ETreeIterator/index.html ETreeIterator]] ...eClass() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EClass/index.html EClass]]eContainer() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EObject/index.html EObject]]eContainingFeature() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EStructuralFeature/index.html EStr ...eContainmentFeature() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EReference/index.html EReference] ...eContents() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EEList/index.html EEList]]&lt;[[https://ecore. ...eCrossReferences() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EEList/index.html EEList]]&lt;[[https:/ ...eGet(feature : [[https://ecore.models.nasdanika.org/references/eClassifiers/EStructuralFeature/index.html EStructuralF ...eInvoke(operation : [[https://ecore.models.nasdanika.org/references/eClassifiers/EOperation/index.html EOperation]], a ...eIsProxy() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EBoolean/index.html EBoolean]]eIsSet(feature : [[https://ecore.models.nasdanika.org/references/eClassifiers/EStructuralFeature/index.html EStructura ...eResource() : [[https://ecore.models.nasdanika.org/references/eClassifiers/EResource/index.html EResource]]eSet(feature : [[https://ecore.models.nasdanika.org/references/eClassifiers/EStructuralFeature/index.html EStructuralF ...eUnset(feature : [[https://ecore.models.nasdanika.org/references/eClassifiers/EStructuralFeature/index.html EStructura ...}DE_1 -up-|&gt; DE_2DE_1 *--&gt; &quot;*&quot; DE_4 [[references/eStructuralFeatures/attributes/index.html{Tag attributes.Syntax Error?"},"references/eClassifiers/Script/diagram.html":{"path":"Script/Diagram","action-uuid":"be24a5b6-7fb3-4fb9-a953-96ab35337523","title":"Diagram","content":"ScriptFilterModelElementsource :EObject"},"references/eClassifiers/Page/references/eStructuralFeatures/head/index.html":{"path":"Page/References/head","action-uuid":"6df643ad-96ec-4117-b3b3-e2f2ac3c5d9b","title":"head","content":"Head content."},"references/eClassifiers/Page/references/eStructuralFeatures/scripts/index.html":{"path":"Page/Attributes/scripts","action-uuid":"7c8c7579-f2c2-409e-97fd-6daf6d97c035","title":"scripts","content":"Script URL&rsquo;s"},"references/eClassifiers/ScriptReference/diagram.html":{"path":"ScriptReference/Diagram","action-uuid":"b3017282-1d04-4836-8cda-82390357cad1","title":"Diagram","content":"ScriptReferencesrc :EStringModelElementMarkedAdaptabledescription :EStringuris :EString[] [[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/references/eStructuralFeatures/uris/index.html{Element URI's - there might be more than one. See ``NcoreUtil.getUris()`` for more details.URI's can be used for cross-referencing of elements in a resource-independent fashion.}]]]uuid :EStringannotations :Property[]labelPrototype :EObject[[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/references/eStructuralFeatures/labelPrototype/index.html{If this reference is not set then EObjectLabelBuilder creates a new Label of its subclass (Link or Action) using AppFactory in newLabel() method.If this reference is set and is and instanceof Label then a copy of the label is created and returned.Otherwise the reference value it is adapted to LabelProvider which is used to create a label.This allows to merge labels and chain label generation.}]]]representations :RepresentationEntry[] [[[https://ncore.models.nasdanika.org/references/eClassifiers/ModelElement/references/eStructuralFeatures/representations/index.html{Mapping of representation keys to URI's of representation resources. URI's are resolved relative to the model element resource URI.During object loading resources are loaded and linked to the object. Additional processing depends on the resource type.In case of Drawio diagrams, diagram elements are semantically mapped to model elements and representation resource root elements are added as children to the object.See [Nasdanika Core Drawio](../drawio/index.html) and [Nasdanika Core EMF](../emf/index.html) documentation for more information. }]]]"},"references/eClassifiers/HtmlElement/inheritance.html":{"path":"HtmlElement/Inheritance","action-uuid":"c55b2eb7-96d2-47e8-81d9-199115831123","title":"Inheritance","content":"Supertypes Subtypes  "}}